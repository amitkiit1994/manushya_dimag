"""Increase memory vector dimension to 1536

Revision ID: f9d2a795d0ac
Revises: 008_add_usage_metering
Create Date: 2025-07-21 13:57:50.389071

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector

# revision identifiers, used by Alembic.
revision = 'f9d2a795d0ac'
down_revision = '008_add_usage_metering'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('memories', 'vector',
               existing_type=pgvector.sqlalchemy.vector.VECTOR(dim=384),
               type_=pgvector.sqlalchemy.vector.VECTOR(dim=1536),
               existing_nullable=True)
    op.drop_index(op.f('idx_memories_tenant_ttl'), table_name='memories', postgresql_where='(ttl_days IS NOT NULL)')
    op.drop_index(op.f('idx_memories_tenant_type_created'), table_name='memories')
    op.drop_index(op.f('idx_memories_vector_hnsw'), table_name='memories', postgresql_with={'m': '16', 'ef_construction': '64'}, postgresql_using='hnsw')
    op.alter_column('usage_daily', 'date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('usage_daily', 'units',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.create_index(op.f('ix_usage_daily_date'), 'usage_daily', ['date'], unique=False)
    op.create_index(op.f('ix_usage_daily_event'), 'usage_daily', ['event'], unique=False)
    op.create_index(op.f('ix_usage_daily_tenant_id'), 'usage_daily', ['tenant_id'], unique=False)
    op.add_column('usage_events', sa.Column('event_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.create_index(op.f('ix_usage_events_api_key_id'), 'usage_events', ['api_key_id'], unique=False)
    op.create_index(op.f('ix_usage_events_created_at'), 'usage_events', ['created_at'], unique=False)
    op.create_index(op.f('ix_usage_events_event'), 'usage_events', ['event'], unique=False)
    op.create_index(op.f('ix_usage_events_identity_id'), 'usage_events', ['identity_id'], unique=False)
    op.create_index(op.f('ix_usage_events_tenant_id'), 'usage_events', ['tenant_id'], unique=False)
    op.drop_column('usage_events', 'metadata')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('usage_events', sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_usage_events_tenant_id'), table_name='usage_events')
    op.drop_index(op.f('ix_usage_events_identity_id'), table_name='usage_events')
    op.drop_index(op.f('ix_usage_events_event'), table_name='usage_events')
    op.drop_index(op.f('ix_usage_events_created_at'), table_name='usage_events')
    op.drop_index(op.f('ix_usage_events_api_key_id'), table_name='usage_events')
    op.drop_column('usage_events', 'event_metadata')
    op.drop_index(op.f('ix_usage_daily_tenant_id'), table_name='usage_daily')
    op.drop_index(op.f('ix_usage_daily_event'), table_name='usage_daily')
    op.drop_index(op.f('ix_usage_daily_date'), table_name='usage_daily')
    op.alter_column('usage_daily', 'units',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('usage_daily', 'date',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.DATE(),
               existing_nullable=False)
    op.create_index(op.f('idx_memories_vector_hnsw'), 'memories', ['vector'], unique=False, postgresql_with={'m': '16', 'ef_construction': '64'}, postgresql_using='hnsw')
    op.create_index(op.f('idx_memories_tenant_type_created'), 'memories', ['tenant_id', 'type', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('idx_memories_tenant_ttl'), 'memories', ['tenant_id', 'ttl_days'], unique=False, postgresql_where='(ttl_days IS NOT NULL)')
    op.alter_column('memories', 'vector',
               existing_type=pgvector.sqlalchemy.vector.VECTOR(dim=1536),
               type_=pgvector.sqlalchemy.vector.VECTOR(dim=384),
               existing_nullable=True)
    # ### end Alembic commands ### 