version: '3.8'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: manushya-postgres
    environment:
      POSTGRES_DB: manushya
      POSTGRES_USER: manushya
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-manushya_secure_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U manushya -d manushya"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - manushya-network

  # Redis for caching and Celery broker
  redis:
    image: redis:7-alpine
    container_name: manushya-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-manushya_redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - manushya-network

  # FastAPI application
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: manushya-api
    environment:
      - DATABASE_URL=postgresql+asyncpg://manushya:${POSTGRES_PASSWORD:-manushya_secure_password}@postgres:5432/manushya
      - REDIS_URL=redis://:${REDIS_PASSWORD:-manushya_redis_password}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-manushya_redis_password}@redis:6379/1
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-manushya_redis_password}@redis:6379/1
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-in-production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key-change-in-production}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-32-byte-encryption-key-change-in-production}
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=INFO
      - ROOT_PATH=
      - ALLOWED_HOSTS=localhost,127.0.0.1
    ports:
      - "8080:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - manushya-network
    restart: unless-stopped

  # Celery worker for background tasks
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: manushya-celery-worker
    command: celery -A manushya.tasks.celery_app worker --loglevel=info --concurrency=4
    environment:
      - DATABASE_URL=postgresql+asyncpg://manushya:${POSTGRES_PASSWORD:-manushya_secure_password}@postgres:5432/manushya
      - REDIS_URL=redis://:${REDIS_PASSWORD:-manushya_redis_password}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-manushya_redis_password}@redis:6379/1
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-manushya_redis_password}@redis:6379/1
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-in-production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key-change-in-production}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-32-byte-encryption-key-change-in-production}
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=INFO
      - ROOT_PATH=
      - ALLOWED_HOSTS=localhost,127.0.0.1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - manushya-network
    restart: unless-stopped

  # Celery beat for scheduled tasks
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: manushya-celery-beat
    command: celery -A manushya.tasks.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql+asyncpg://manushya:${POSTGRES_PASSWORD:-manushya_secure_password}@postgres:5432/manushya
      - REDIS_URL=redis://:${REDIS_PASSWORD:-manushya_redis_password}@redis:6379/0
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-manushya_redis_password}@redis:6379/1
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-manushya_redis_password}@redis:6379/1
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-in-production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key-change-in-production}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-32-byte-encryption-key-change-in-production}
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=INFO
      - ROOT_PATH=
      - ALLOWED_HOSTS=localhost,127.0.0.1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - manushya-network
    restart: unless-stopped

  # Flower for Celery monitoring (optional)
  flower:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: manushya-flower
    command: celery -A manushya.tasks.celery_app flower --port=5555
    environment:
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-manushya_redis_password}@redis:6379/1
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-manushya_redis_password}@redis:6379/1
      - FLOWER_BASIC_AUTH=${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-admin}
      - ENVIRONMENT=development
      - DEBUG=true
      - ROOT_PATH=
      - ALLOWED_HOSTS=localhost,127.0.0.1
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - manushya-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  manushya-network:
    driver: bridge 