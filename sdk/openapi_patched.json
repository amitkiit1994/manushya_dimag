{
  "openapi": "3.1.0",
  "info": {
    "title": "Manushya.ai",
    "description": "Secure identity + memory infrastructure for autonomous AI agents",
    "version": "0.1.0"
  },
  "paths": {
    "/healthz": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_healthz_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Health Check Healthz Get"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Metrics",
        "description": "Prometheus metrics endpoint.",
        "operationId": "metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/identity/": {
      "post": {
        "tags": [
          "identity"
        ],
        "summary": "Create Identity",
        "description": "Create a new identity and return access token.\nInjects tenant_id for multi-tenancy.",
        "operationId": "create_identity_v1_identity__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "identity"
        ],
        "summary": "List Identities",
        "description": "List identities (requires appropriate permissions).\nBy default, only active identities are returned.\nUse is_active=false to list inactive, or is_active=all to list all (admin only).\nOnly returns identities for the current tenant,\nunless current identity is global/system-level.",
        "operationId": "list_identities_v1_identity__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active/inactive identities. Default: only active.",
              "title": "Is Active"
            },
            "description": "Filter by active/inactive identities. Default: only active."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityResponse"
                  },
                  "title": "Response List Identities V1 Identity  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/identity/me": {
      "get": {
        "tags": [
          "identity"
        ],
        "summary": "Get Current Identity Info",
        "description": "Get current identity information.",
        "operationId": "get_current_identity_info_v1_identity_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "identity"
        ],
        "summary": "Update Current Identity",
        "description": "Update current identity.",
        "operationId": "update_current_identity_v1_identity_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/identity/{identity_id}": {
      "get": {
        "tags": [
          "identity"
        ],
        "summary": "Get Identity",
        "description": "Get identity by ID (requires appropriate permissions).\nOnly for current tenant unless global/system-level.",
        "operationId": "get_identity_v1_identity__identity_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "identity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Identity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "identity"
        ],
        "summary": "Delete Identity",
        "description": "Delete identity (requires appropriate permissions).",
        "operationId": "delete_identity_v1_identity__identity_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "identity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Identity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/identity/bulk-delete": {
      "post": {
        "tags": [
          "identity"
        ],
        "summary": "Bulk Delete Identities",
        "description": "Bulk delete identities (requires appropriate permissions).",
        "operationId": "bulk_delete_identities_v1_identity_bulk_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDeleteRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeleteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/memory/": {
      "post": {
        "tags": [
          "memory"
        ],
        "summary": "Create Memory",
        "description": "Create a new memory.",
        "operationId": "create_memory_v1_memory__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoryCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "memory"
        ],
        "summary": "List Memories",
        "description": "List memories for current identity.",
        "operationId": "list_memories_v1_memory__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "memory_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Memory Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MemoryResponse"
                  },
                  "title": "Response List Memories V1 Memory  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/memory/{memory_id}": {
      "get": {
        "tags": [
          "memory"
        ],
        "summary": "Get Memory",
        "description": "Get memory by ID.",
        "operationId": "get_memory_v1_memory__memory_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "memory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Memory Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "memory"
        ],
        "summary": "Update Memory",
        "description": "Update memory.",
        "operationId": "update_memory_v1_memory__memory_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "memory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Memory Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "memory"
        ],
        "summary": "Delete Memory",
        "description": "Delete memory (soft delete by default).",
        "operationId": "delete_memory_v1_memory__memory_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "memory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Memory Id"
            }
          },
          {
            "name": "hard_delete",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Perform hard delete",
              "default": false,
              "title": "Hard Delete"
            },
            "description": "Perform hard delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/memory/search": {
      "post": {
        "tags": [
          "memory"
        ],
        "summary": "Search Memories",
        "description": "Search memories using vector similarity and text matching.",
        "operationId": "search_memories_v1_memory_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemorySearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MemoryResponse"
                  },
                  "type": "array",
                  "title": "Response Search Memories V1 Memory Search Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/memory/bulk-delete": {
      "post": {
        "tags": [
          "memory"
        ],
        "summary": "Bulk Delete Memories",
        "description": "Bulk delete memories (requires appropriate permissions).",
        "operationId": "bulk_delete_memories_v1_memory_bulk_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDeleteMemoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeleteMemoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/policy/": {
      "post": {
        "tags": [
          "policy"
        ],
        "summary": "Create Policy",
        "description": "Create a new policy.",
        "operationId": "create_policy_v1_policy__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "policy"
        ],
        "summary": "List Policies",
        "description": "List policies.",
        "operationId": "list_policies_v1_policy__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active/inactive policies. Default: only active.",
              "title": "Is Active"
            },
            "description": "Filter by active/inactive policies. Default: only active."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyResponse"
                  },
                  "title": "Response List Policies V1 Policy  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/policy/{policy_id}": {
      "get": {
        "tags": [
          "policy"
        ],
        "summary": "Get Policy",
        "description": "Get policy by ID.",
        "operationId": "get_policy_v1_policy__policy_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Policy Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "policy"
        ],
        "summary": "Update Policy",
        "description": "Update policy.",
        "operationId": "update_policy_v1_policy__policy_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Policy Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "policy"
        ],
        "summary": "Delete Policy",
        "description": "Delete policy.",
        "operationId": "delete_policy_v1_policy__policy_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "policy_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Policy Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/policy/bulk-delete": {
      "post": {
        "tags": [
          "policy"
        ],
        "summary": "Bulk Delete Policies",
        "description": "Bulk delete policies (requires admin permissions).",
        "operationId": "bulk_delete_policies_v1_policy_bulk_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDeletePolicyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeletePolicyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/policy/test": {
      "post": {
        "tags": [
          "policy"
        ],
        "summary": "Test Policy",
        "description": "Test a policy evaluation.",
        "operationId": "test_policy_v1_policy_test_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role"
            }
          },
          {
            "name": "action",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resource"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Context"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api-keys/": {
      "post": {
        "tags": [
          "api-keys"
        ],
        "summary": "Create Api Key",
        "description": "Create a new API key.",
        "operationId": "create_api_key_v1_api_keys__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api-keys"
        ],
        "summary": "List Api Keys",
        "description": "List API keys.",
        "operationId": "list_api_keys_v1_api_keys__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyResponse"
                  },
                  "title": "Response List Api Keys V1 Api Keys  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api-keys/{api_key_id}": {
      "get": {
        "tags": [
          "api-keys"
        ],
        "summary": "Get Api Key",
        "description": "Get API key by ID.",
        "operationId": "get_api_key_v1_api_keys__api_key_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Api Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "api-keys"
        ],
        "summary": "Update Api Key",
        "description": "Update API key.",
        "operationId": "update_api_key_v1_api_keys__api_key_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Api Key Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api-keys"
        ],
        "summary": "Revoke Api Key",
        "description": "Revoke an API key.",
        "operationId": "revoke_api_key_v1_api_keys__api_key_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Api Key Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api-keys/test": {
      "post": {
        "tags": [
          "api-keys"
        ],
        "summary": "Test Api Key Auth",
        "description": "Test API key authentication.",
        "operationId": "test_api_key_auth_v1_api_keys_test_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/invitations/": {
      "post": {
        "tags": [
          "invitations"
        ],
        "summary": "Create Invitation",
        "description": "Create a new invitation.",
        "operationId": "create_invitation_v1_invitations__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "invitations"
        ],
        "summary": "List Invitations",
        "description": "List invitations.",
        "operationId": "list_invitations_v1_invitations__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_accepted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include accepted invitations",
              "default": false,
              "title": "Include Accepted"
            },
            "description": "Include accepted invitations"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvitationResponse"
                  },
                  "title": "Response List Invitations V1 Invitations  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invitations/{invitation_id}": {
      "get": {
        "tags": [
          "invitations"
        ],
        "summary": "Get Invitation",
        "description": "Get invitation by ID.",
        "operationId": "get_invitation_v1_invitations__invitation_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Invitation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "invitations"
        ],
        "summary": "Revoke Invitation",
        "description": "Revoke an invitation.",
        "operationId": "revoke_invitation_v1_invitations__invitation_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Invitation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invitations/validate/{token}": {
      "get": {
        "tags": [
          "invitations"
        ],
        "summary": "Validate Invitation Token",
        "description": "Validate an invitation token.",
        "operationId": "validate_invitation_token_v1_invitations_validate__token__get",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invitations/accept/{token}": {
      "post": {
        "tags": [
          "invitations"
        ],
        "summary": "Accept Invitation",
        "description": "Accept an invitation and create identity.",
        "operationId": "accept_invitation_v1_invitations_accept__token__post",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvitationAccept"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationAcceptResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/invitations/resend/{invitation_id}": {
      "post": {
        "tags": [
          "invitations"
        ],
        "summary": "Resend Invitation",
        "description": "Resend an invitation email.",
        "operationId": "resend_invitation_v1_invitations_resend__invitation_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Invitation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sessions/refresh": {
      "post": {
        "tags": [
          "sessions"
        ],
        "summary": "Refresh Token",
        "description": "Refresh access token using refresh token.",
        "operationId": "refresh_token_v1_sessions_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sessions/": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "List Sessions",
        "description": "List all active sessions for the current identity.",
        "operationId": "list_sessions_v1_sessions__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SessionResponse"
                  },
                  "type": "array",
                  "title": "Response List Sessions V1 Sessions  Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "sessions"
        ],
        "summary": "Revoke All Sessions",
        "description": "Revoke all sessions for the current identity.",
        "operationId": "revoke_all_sessions_v1_sessions__delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/sessions/{session_id}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get Session",
        "description": "Get specific session details.",
        "operationId": "get_session_v1_sessions__session_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sessions"
        ],
        "summary": "Revoke Session",
        "description": "Revoke a specific session.",
        "operationId": "revoke_session_v1_sessions__session_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sessions/cleanup": {
      "post": {
        "tags": [
          "sessions"
        ],
        "summary": "Cleanup Expired Sessions",
        "description": "Clean up expired sessions (admin only).",
        "operationId": "cleanup_expired_sessions_v1_sessions_cleanup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/sessions/test": {
      "post": {
        "tags": [
          "sessions"
        ],
        "summary": "Test Session Auth",
        "description": "Test session authentication.",
        "operationId": "test_session_auth_v1_sessions_test_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/events/": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "List Events",
        "description": "List identity events with optional filtering.",
        "operationId": "list_events_v1_events__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by event type",
              "title": "Event Type"
            },
            "description": "Filter by event type"
          },
          {
            "name": "identity_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by identity ID",
              "title": "Identity Id"
            },
            "description": "Filter by identity ID"
          },
          {
            "name": "is_delivered",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by delivery status",
              "title": "Is Delivered"
            },
            "description": "Filter by delivery status"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of events to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of events to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResponse"
                  },
                  "title": "Response List Events V1 Events  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/{event_id}": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Event",
        "description": "Get specific event details.",
        "operationId": "get_event_v1_events__event_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/identity/{identity_id}": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Events For Identity",
        "description": "Get events for a specific identity.",
        "operationId": "get_events_for_identity_v1_events_identity__identity_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "identity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Identity Id"
            }
          },
          {
            "name": "event_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by event types",
              "title": "Event Types"
            },
            "description": "Filter by event types"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of events to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of events to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResponse"
                  },
                  "title": "Response Get Events For Identity V1 Events Identity  Identity Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/types": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Event Types",
        "description": "Get list of available event types.",
        "operationId": "get_event_types_v1_events_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/EventTypeInfo"
                  },
                  "type": "array",
                  "title": "Response Get Event Types V1 Events Types Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/events/stats": {
      "get": {
        "tags": [
          "events"
        ],
        "summary": "Get Event Stats",
        "description": "Get event statistics.",
        "operationId": "get_event_stats_v1_events_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/events/retry/{event_id}": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Retry Event Delivery",
        "description": "Retry delivery of a failed event.",
        "operationId": "retry_event_delivery_v1_events_retry__event_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/cleanup": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Cleanup Old Events",
        "description": "Clean up old delivered events (admin only).",
        "operationId": "cleanup_old_events_v1_events_cleanup_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_old",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Remove events older than this many days",
              "default": 90,
              "title": "Days Old"
            },
            "description": "Remove events older than this many days"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/test": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Test Event Publishing",
        "description": "Test event publishing (admin only).",
        "operationId": "test_event_publishing_v1_events_test_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Event type to test",
              "default": "test.event",
              "title": "Event Type"
            },
            "description": "Event type to test"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sso/login/{provider}": {
      "get": {
        "tags": [
          "sso",
          "sso"
        ],
        "summary": "Initiate SSO login",
        "description": "Initiate SSO login with a provider. Redirects to the provider's auth page.",
        "operationId": "sso_login_v1_sso_login__provider__get",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sso/callback/{provider}": {
      "get": {
        "tags": [
          "sso",
          "sso"
        ],
        "summary": "SSO callback",
        "description": "Handle SSO callback. Creates or updates user and returns tokens.",
        "operationId": "sso_callback_v1_sso_callback__provider__get",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/rate-limits": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List all rate limit records (admin only)",
        "operationId": "list_all_rate_limits_v1_admin_rate_limits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete all rate limit records (admin only)",
        "operationId": "delete_all_rate_limits_v1_admin_rate_limits_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/monitoring/rate-limits": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Rate Limit Status",
        "description": "Get current rate limit status for the tenant.",
        "operationId": "get_rate_limit_status_v1_monitoring_rate_limits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/monitoring/usage": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Usage Metrics",
        "description": "Get comprehensive usage metrics.",
        "operationId": "get_usage_metrics_v1_monitoring_usage_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageMetricsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/monitoring/health": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get System Health",
        "description": "Get comprehensive system health status.",
        "operationId": "get_system_health_v1_monitoring_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealthResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/monitoring/performance": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Performance Metrics",
        "description": "Get performance metrics.",
        "operationId": "get_performance_metrics_v1_monitoring_performance_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceMetricsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/monitoring/audit-trail": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Audit Trail",
        "description": "Get audit trail with filtering.",
        "operationId": "get_audit_trail_v1_monitoring_audit_trail_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by event type",
              "title": "Event Type"
            },
            "description": "Filter by event type"
          },
          {
            "name": "actor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by actor ID",
              "title": "Actor Id"
            },
            "description": "Filter by actor ID"
          },
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by resource type",
              "title": "Resource Type"
            },
            "description": "Filter by resource type"
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of days to look back",
              "default": 7,
              "title": "Days"
            },
            "description": "Number of days to look back"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Maximum number of records",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of records"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrailResponse"
                  },
                  "title": "Response Get Audit Trail V1 Monitoring Audit Trail Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/monitoring/webhook-stats": {
      "get": {
        "tags": [
          "monitoring"
        ],
        "summary": "Get Webhook Delivery Stats",
        "description": "Get webhook delivery statistics.",
        "operationId": "get_webhook_delivery_stats_v1_monitoring_webhook_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of days to analyze",
              "default": 30,
              "title": "Days"
            },
            "description": "Number of days to analyze"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/webhooks/": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Create Webhook",
        "description": "Create a new webhook registration.",
        "operationId": "create_webhook_v1_webhooks__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "List Webhooks",
        "description": "List webhooks for the current tenant.",
        "operationId": "list_webhooks_v1_webhooks__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookResponse"
                  },
                  "title": "Response List Webhooks V1 Webhooks  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get Webhook",
        "description": "Get a specific webhook by ID.",
        "operationId": "get_webhook_v1_webhooks__webhook_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "webhooks"
        ],
        "summary": "Update Webhook",
        "description": "Update a webhook.",
        "operationId": "update_webhook_v1_webhooks__webhook_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhook Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "webhooks"
        ],
        "summary": "Delete Webhook",
        "description": "Delete a webhook.",
        "operationId": "delete_webhook_v1_webhooks__webhook_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhook Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/webhooks/{webhook_id}/deliveries": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "List Webhook Deliveries",
        "description": "List deliveries for a specific webhook.",
        "operationId": "list_webhook_deliveries_v1_webhooks__webhook_id__deliveries_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhook Id"
            }
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Filter"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookDeliveryResponse"
                  },
                  "title": "Response List Webhook Deliveries V1 Webhooks  Webhook Id  Deliveries Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/webhooks/{webhook_id}/deliveries/{delivery_id}/retry": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Retry Webhook Delivery",
        "description": "Retry a failed webhook delivery.",
        "operationId": "retry_webhook_delivery_v1_webhooks__webhook_id__deliveries__delivery_id__retry_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Webhook Id"
            }
          },
          {
            "name": "delivery_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Delivery Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/webhooks/stats": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get Webhook Stats",
        "description": "Get webhook statistics for the current tenant.",
        "operationId": "get_webhook_stats_v1_webhooks_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookStatsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/v1/webhooks/events": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get Supported Events",
        "description": "Get list of supported webhook events.",
        "operationId": "get_supported_events_v1_webhooks_events_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Get Supported Events V1 Webhooks Events Get"
                }
              }
            }
          }
        }
      }
    },
    "/v1/usage/usage/events": {
      "get": {
        "tags": [
          "usage",
          "usage"
        ],
        "summary": "Get Usage Events",
        "description": "Get usage events for the current tenant.",
        "operationId": "get_usage_events_v1_usage_usage_events_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for filtering",
              "title": "Start Date"
            },
            "description": "Start date for filtering"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for filtering",
              "title": "End Date"
            },
            "description": "End date for filtering"
          },
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by event type",
              "title": "Event Type"
            },
            "description": "Filter by event type"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Number of events to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of events to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of events to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of events to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsageEventResponse"
                  },
                  "title": "Response Get Usage Events V1 Usage Usage Events Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/usage/usage/daily": {
      "get": {
        "tags": [
          "usage",
          "usage"
        ],
        "summary": "Get Daily Usage",
        "description": "Get daily aggregated usage for the current tenant.",
        "operationId": "get_daily_usage_v1_usage_usage_daily_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for filtering",
              "title": "Start Date"
            },
            "description": "Start date for filtering"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for filtering",
              "title": "End Date"
            },
            "description": "End date for filtering"
          },
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by event type",
              "title": "Event Type"
            },
            "description": "Filter by event type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsageDailyResponse"
                  },
                  "title": "Response Get Daily Usage V1 Usage Usage Daily Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/usage/usage/summary": {
      "get": {
        "tags": [
          "usage",
          "usage"
        ],
        "summary": "Get Usage Summary",
        "description": "Get usage summary for the current tenant.",
        "operationId": "get_usage_summary_v1_usage_usage_summary_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "Number of days to summarize",
              "default": 30,
              "title": "Days"
            },
            "description": "Number of days to summarize"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageSummaryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/usage/usage/aggregate": {
      "post": {
        "tags": [
          "usage",
          "usage"
        ],
        "summary": "Trigger Usage Aggregation",
        "description": "Trigger manual usage aggregation (admin only).",
        "operationId": "trigger_usage_aggregation_v1_usage_usage_aggregate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Target date for aggregation (defaults to today)",
              "title": "Target Date"
            },
            "description": "Target date for aggregation (defaults to today)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/usage/usage/admin/all-tenants": {
      "get": {
        "tags": [
          "usage",
          "usage"
        ],
        "summary": "Get All Tenants Usage",
        "description": "Get usage summary for all tenants (admin only).",
        "operationId": "get_all_tenants_usage_v1_usage_usage_admin_all_tenants_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for filtering",
              "title": "Start Date"
            },
            "description": "Start date for filtering"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for filtering",
              "title": "End Date"
            },
            "description": "End date for filtering"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsageSummaryResponse"
                  },
                  "title": "Response Get All Tenants Usage V1 Usage Usage Admin All Tenants Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiKeyCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name for the API key"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes",
            "description": "List of scopes for the API key"
          },
          "expires_in_days": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires In Days",
            "description": "Expiration in days (optional)"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ApiKeyCreate"
      },
      "ApiKeyCreateResponse": {
        "properties": {
          "api_key": {
            "$ref": "#/components/schemas/ApiKeyResponse"
          },
          "secret_key": {
            "type": "string",
            "title": "Secret Key",
            "description": "The actual API key (only shown once)"
          }
        },
        "type": "object",
        "required": [
          "api_key",
          "secret_key"
        ],
        "title": "ApiKeyCreateResponse"
      },
      "ApiKeyResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "scopes",
          "is_active",
          "expires_at",
          "last_used_at",
          "created_at",
          "updated_at"
        ],
        "title": "ApiKeyResponse"
      },
      "ApiKeyUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name for the API key"
          },
          "scopes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scopes",
            "description": "List of scopes for the API key"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether the API key is active"
          },
          "expires_in_days": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires In Days",
            "description": "Expiration in days (optional)"
          }
        },
        "type": "object",
        "title": "ApiKeyUpdate"
      },
      "AuditTrailResponse": {
        "properties": {
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "actor_id": {
            "type": "string",
            "title": "Actor Id"
          },
          "resource_type": {
            "type": "string",
            "title": "Resource Type"
          },
          "resource_id": {
            "type": "string",
            "title": "Resource Id"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "before_state": {
            "additionalProperties": true,
            "type": "object",
            "title": "Before State"
          },
          "after_state": {
            "additionalProperties": true,
            "type": "object",
            "title": "After State"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "actor_id",
          "resource_type",
          "resource_id",
          "tenant_id",
          "timestamp",
          "before_state",
          "after_state",
          "ip_address",
          "user_agent"
        ],
        "title": "AuditTrailResponse"
      },
      "BulkDeleteMemoryRequest": {
        "properties": {
          "memory_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Memory Ids",
            "description": "List of memory IDs to delete"
          },
          "hard_delete": {
            "type": "boolean",
            "title": "Hard Delete",
            "description": "Perform hard delete instead of soft delete",
            "default": false
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "description": "Reason for bulk deletion"
          }
        },
        "type": "object",
        "required": [
          "memory_ids"
        ],
        "title": "BulkDeleteMemoryRequest"
      },
      "BulkDeleteMemoryResponse": {
        "properties": {
          "deleted_count": {
            "type": "integer",
            "title": "Deleted Count"
          },
          "failed_count": {
            "type": "integer",
            "title": "Failed Count"
          },
          "failed_memories": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Failed Memories"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "deleted_count",
          "failed_count",
          "failed_memories",
          "message"
        ],
        "title": "BulkDeleteMemoryResponse"
      },
      "BulkDeletePolicyRequest": {
        "properties": {
          "policy_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Policy Ids",
            "description": "List of policy IDs to delete"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "description": "Reason for bulk deletion"
          }
        },
        "type": "object",
        "required": [
          "policy_ids"
        ],
        "title": "BulkDeletePolicyRequest"
      },
      "BulkDeletePolicyResponse": {
        "properties": {
          "deleted_count": {
            "type": "integer",
            "title": "Deleted Count"
          },
          "failed_count": {
            "type": "integer",
            "title": "Failed Count"
          },
          "failed_policies": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Failed Policies"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "deleted_count",
          "failed_count",
          "failed_policies",
          "message"
        ],
        "title": "BulkDeletePolicyResponse"
      },
      "BulkDeleteRequest": {
        "properties": {
          "identity_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Identity Ids",
            "description": "List of identity IDs to delete"
          },
          "hard_delete": {
            "type": "boolean",
            "title": "Hard Delete",
            "description": "Perform hard delete instead of soft delete",
            "default": false
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "description": "Reason for bulk deletion"
          }
        },
        "type": "object",
        "required": [
          "identity_ids"
        ],
        "title": "BulkDeleteRequest"
      },
      "BulkDeleteResponse": {
        "properties": {
          "deleted_count": {
            "type": "integer",
            "title": "Deleted Count"
          },
          "failed_count": {
            "type": "integer",
            "title": "Failed Count"
          },
          "failed_identities": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Failed Identities"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "deleted_count",
          "failed_count",
          "failed_identities",
          "message"
        ],
        "title": "BulkDeleteResponse"
      },
      "EventResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "identity_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identity Id"
          },
          "actor_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actor Id"
          },
          "payload": {
            "additionalProperties": true,
            "type": "object",
            "title": "Payload"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata"
          },
          "is_delivered": {
            "type": "boolean",
            "title": "Is Delivered"
          },
          "delivery_attempts": {
            "type": "integer",
            "title": "Delivery Attempts"
          },
          "delivered_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivered At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "event_type",
          "identity_id",
          "actor_id",
          "payload",
          "metadata",
          "is_delivered",
          "delivery_attempts",
          "delivered_at",
          "created_at",
          "updated_at"
        ],
        "title": "EventResponse"
      },
      "EventStats": {
        "properties": {
          "total_events": {
            "type": "integer",
            "title": "Total Events"
          },
          "delivered_events": {
            "type": "integer",
            "title": "Delivered Events"
          },
          "undelivered_events": {
            "type": "integer",
            "title": "Undelivered Events"
          },
          "event_types": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Event Types"
          }
        },
        "type": "object",
        "required": [
          "total_events",
          "delivered_events",
          "undelivered_events",
          "event_types"
        ],
        "title": "EventStats"
      },
      "EventTypeInfo": {
        "properties": {
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "description"
        ],
        "title": "EventTypeInfo"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IdentityCreate": {
        "properties": {
          "external_id": {
            "type": "string",
            "title": "External Id",
            "description": "External identifier for the identity"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "description": "Role of the identity"
          },
          "claims": {
            "additionalProperties": true,
            "type": "object",
            "title": "Claims",
            "description": "Additional claims"
          }
        },
        "type": "object",
        "required": [
          "external_id",
          "role"
        ],
        "title": "IdentityCreate"
      },
      "IdentityResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "external_id": {
            "type": "string",
            "title": "External Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "claims": {
            "additionalProperties": true,
            "type": "object",
            "title": "Claims"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "external_id",
          "role",
          "claims",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "IdentityResponse"
      },
      "IdentityTokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "identity": {
            "$ref": "#/components/schemas/IdentityResponse"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "identity"
        ],
        "title": "IdentityTokenResponse"
      },
      "IdentityUpdate": {
        "properties": {
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "Role of the identity"
          },
          "claims": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Claims",
            "description": "Additional claims"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether the identity is active"
          }
        },
        "type": "object",
        "title": "IdentityUpdate"
      },
      "InvitationAccept": {
        "properties": {
          "external_id": {
            "type": "string",
            "title": "External Id",
            "description": "External ID for the new identity"
          }
        },
        "type": "object",
        "required": [
          "external_id"
        ],
        "title": "InvitationAccept"
      },
      "InvitationAcceptResponse": {
        "properties": {
          "identity": {
            "additionalProperties": true,
            "type": "object",
            "title": "Identity"
          },
          "token": {
            "type": "string",
            "title": "Token",
            "description": "JWT token for the new identity"
          }
        },
        "type": "object",
        "required": [
          "identity",
          "token"
        ],
        "title": "InvitationAcceptResponse"
      },
      "InvitationCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Email address to invite"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "description": "Role for the invited user"
          },
          "claims": {
            "additionalProperties": true,
            "type": "object",
            "title": "Claims",
            "description": "Additional claims for the user"
          },
          "expires_in_days": {
            "type": "integer",
            "title": "Expires In Days",
            "description": "Invitation expiration in days",
            "default": 7
          }
        },
        "type": "object",
        "required": [
          "email",
          "role"
        ],
        "title": "InvitationCreate"
      },
      "InvitationResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "claims": {
            "additionalProperties": true,
            "type": "object",
            "title": "Claims"
          },
          "is_accepted": {
            "type": "boolean",
            "title": "Is Accepted"
          },
          "accepted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accepted At"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "invited_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invited By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "role",
          "claims",
          "is_accepted",
          "accepted_at",
          "expires_at",
          "created_at",
          "updated_at",
          "tenant_id"
        ],
        "title": "InvitationResponse"
      },
      "MemoryCreate": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Memory text content"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Type of memory"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata",
            "description": "Additional metadata"
          },
          "ttl_days": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Days",
            "description": "Time to live in days"
          }
        },
        "type": "object",
        "required": [
          "text",
          "type"
        ],
        "title": "MemoryCreate"
      },
      "MemoryResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "identity_id": {
            "type": "string",
            "format": "uuid",
            "title": "Identity Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "meta_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Meta Data"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "ttl_days": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Days"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "identity_id",
          "text",
          "type",
          "meta_data",
          "score",
          "version",
          "ttl_days",
          "created_at",
          "updated_at"
        ],
        "title": "MemoryResponse"
      },
      "MemorySearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Search query"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "Filter by memory type"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Maximum number of results",
            "default": 10
          },
          "similarity_threshold": {
            "type": "number",
            "title": "Similarity Threshold",
            "description": "Minimum similarity score",
            "default": 0.7
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "MemorySearchRequest"
      },
      "MemoryUpdate": {
        "properties": {
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "description": "Memory text content"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "Type of memory"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata"
          },
          "ttl_days": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Days",
            "description": "Time to live in days"
          }
        },
        "type": "object",
        "title": "MemoryUpdate"
      },
      "PerformanceMetricsResponse": {
        "properties": {
          "avg_response_time_ms": {
            "type": "number",
            "title": "Avg Response Time Ms"
          },
          "p95_response_time_ms": {
            "type": "number",
            "title": "P95 Response Time Ms"
          },
          "p99_response_time_ms": {
            "type": "number",
            "title": "P99 Response Time Ms"
          },
          "requests_per_second": {
            "type": "number",
            "title": "Requests Per Second"
          },
          "error_rate_percent": {
            "type": "number",
            "title": "Error Rate Percent"
          },
          "database_connections": {
            "type": "integer",
            "title": "Database Connections"
          },
          "redis_memory_usage_mb": {
            "type": "number",
            "title": "Redis Memory Usage Mb"
          },
          "background_task_queue_size": {
            "type": "integer",
            "title": "Background Task Queue Size"
          }
        },
        "type": "object",
        "required": [
          "avg_response_time_ms",
          "p95_response_time_ms",
          "p99_response_time_ms",
          "requests_per_second",
          "error_rate_percent",
          "database_connections",
          "redis_memory_usage_mb",
          "background_task_queue_size"
        ],
        "title": "PerformanceMetricsResponse"
      },
      "PolicyCreate": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role",
            "description": "Role this policy applies to"
          },
          "rule": {
            "additionalProperties": true,
            "type": "object",
            "title": "Rule",
            "description": "JSON Logic rule"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Policy description"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "description": "Policy priority (higher = more important)",
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the policy is active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "role",
          "rule"
        ],
        "title": "PolicyCreate"
      },
      "PolicyResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "rule": {
            "additionalProperties": true,
            "type": "object",
            "title": "Rule"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "priority": {
            "type": "integer",
            "title": "Priority"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "role",
          "rule",
          "description",
          "priority",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "PolicyResponse"
      },
      "PolicyUpdate": {
        "properties": {
          "rule": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rule",
            "description": "JSON Logic rule"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Policy description"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority",
            "description": "Policy priority"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether the policy is active"
          }
        },
        "type": "object",
        "title": "PolicyUpdate"
      },
      "RefreshTokenRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token",
            "description": "Refresh token"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest"
      },
      "RefreshTokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "token_type",
          "expires_in"
        ],
        "title": "RefreshTokenResponse"
      },
      "SessionResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "device_info": {
            "additionalProperties": true,
            "type": "object",
            "title": "Device Info"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time",
            "title": "Last Used At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "device_info",
          "ip_address",
          "user_agent",
          "is_active",
          "expires_at",
          "last_used_at",
          "created_at",
          "updated_at"
        ],
        "title": "SessionResponse"
      },
      "SystemHealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "uptime_seconds": {
            "type": "number",
            "title": "Uptime Seconds"
          },
          "database_connected": {
            "type": "boolean",
            "title": "Database Connected"
          },
          "redis_connected": {
            "type": "boolean",
            "title": "Redis Connected"
          },
          "celery_workers": {
            "type": "integer",
            "title": "Celery Workers"
          },
          "memory_usage_mb": {
            "type": "number",
            "title": "Memory Usage Mb"
          },
          "cpu_usage_percent": {
            "type": "number",
            "title": "Cpu Usage Percent"
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "version",
          "uptime_seconds",
          "database_connected",
          "redis_connected",
          "celery_workers",
          "memory_usage_mb",
          "cpu_usage_percent"
        ],
        "title": "SystemHealthResponse"
      },
      "UsageDailyResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "event": {
            "type": "string",
            "title": "Event"
          },
          "units": {
            "type": "integer",
            "title": "Units"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "date",
          "event",
          "units",
          "created_at",
          "updated_at"
        ],
        "title": "UsageDailyResponse",
        "description": "Daily usage response model."
      },
      "UsageEventResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id"
          },
          "api_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key Id"
          },
          "identity_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identity Id"
          },
          "event": {
            "type": "string",
            "title": "Event"
          },
          "units": {
            "type": "integer",
            "title": "Units"
          },
          "event_metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Event Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "event",
          "units",
          "event_metadata",
          "created_at"
        ],
        "title": "UsageEventResponse",
        "description": "Usage event response model."
      },
      "UsageMetricsResponse": {
        "properties": {
          "total_identities": {
            "type": "integer",
            "title": "Total Identities"
          },
          "active_sessions": {
            "type": "integer",
            "title": "Active Sessions"
          },
          "total_memories": {
            "type": "integer",
            "title": "Total Memories"
          },
          "total_api_keys": {
            "type": "integer",
            "title": "Total Api Keys"
          },
          "total_webhooks": {
            "type": "integer",
            "title": "Total Webhooks"
          },
          "total_invitations": {
            "type": "integer",
            "title": "Total Invitations"
          },
          "rate_limit_violations": {
            "type": "integer",
            "title": "Rate Limit Violations"
          },
          "webhook_delivery_success_rate": {
            "type": "number",
            "title": "Webhook Delivery Success Rate"
          },
          "memory_search_queries": {
            "type": "integer",
            "title": "Memory Search Queries"
          },
          "last_24h_activity": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Last 24H Activity"
          }
        },
        "type": "object",
        "required": [
          "total_identities",
          "active_sessions",
          "total_memories",
          "total_api_keys",
          "total_webhooks",
          "total_invitations",
          "rate_limit_violations",
          "webhook_delivery_success_rate",
          "memory_search_queries",
          "last_24h_activity"
        ],
        "title": "UsageMetricsResponse"
      },
      "UsageSummaryResponse": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "title": "Tenant Id"
          },
          "period": {
            "additionalProperties": true,
            "type": "object",
            "title": "Period"
          },
          "totals": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Totals"
          },
          "daily_breakdown": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Daily Breakdown"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "period",
          "totals",
          "daily_breakdown"
        ],
        "title": "UsageSummaryResponse",
        "description": "Usage summary response model."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WebhookCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Webhook name"
          },
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url",
            "description": "Webhook URL"
          },
          "events": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Events",
            "description": "List of events to subscribe to"
          }
        },
        "type": "object",
        "required": [
          "name",
          "url",
          "events"
        ],
        "title": "WebhookCreate"
      },
      "WebhookDeliveryResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "webhook_id": {
            "type": "string",
            "format": "uuid",
            "title": "Webhook Id"
          },
          "event_type": {
            "type": "string",
            "title": "Event Type"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "response_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Code"
          },
          "delivery_attempts": {
            "type": "integer",
            "title": "Delivery Attempts"
          },
          "next_retry_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Retry At"
          },
          "delivered_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivered At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "webhook_id",
          "event_type",
          "status",
          "delivery_attempts",
          "created_at"
        ],
        "title": "WebhookDeliveryResponse"
      },
      "WebhookResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "events": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Events"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "url",
          "events",
          "is_active",
          "created_at",
          "updated_at"
        ],
        "title": "WebhookResponse"
      },
      "WebhookStatsResponse": {
        "properties": {
          "total_webhooks": {
            "type": "integer",
            "title": "Total Webhooks"
          },
          "active_webhooks": {
            "type": "integer",
            "title": "Active Webhooks"
          },
          "pending_deliveries": {
            "type": "integer",
            "title": "Pending Deliveries"
          },
          "failed_deliveries": {
            "type": "integer",
            "title": "Failed Deliveries"
          },
          "successful_deliveries": {
            "type": "integer",
            "title": "Successful Deliveries"
          }
        },
        "type": "object",
        "required": [
          "total_webhooks",
          "active_webhooks",
          "pending_deliveries",
          "failed_deliveries",
          "successful_deliveries"
        ],
        "title": "WebhookStatsResponse"
      },
      "WebhookUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Webhook name"
          },
          "url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "Webhook URL"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events",
            "description": "List of events to subscribe to"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "description": "Whether webhook is active"
          }
        },
        "type": "object",
        "title": "WebhookUpdate"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "BearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ]
}